import proguard.gradle.ProGuardTask

buildscript {
    repositories {
        maven {
            name = 'aliyun'
            url = 'https://maven.aliyun.com/repository/public'
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'net.sf.proguard:proguard-gradle:6.0.3'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

version = "1.7.10-4.10.1"
group = "com.flansmod"

sourceCompatibility = targetCompatibility = 1.7

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "build/run"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task serverJar(type: Jar, dependsOn: reobf) {
    classifier = 'server'
    from(zipTree(jar.getArchivePath()))
    exclude 'assets/**/gui/', 'assets/**/skins/', 'assets/**/teamsMod/', 'assets/**/textures/'
}

task clientJar(type: Jar, dependsOn: reobf) {
    classifier = 'client'
    from(zipTree(jar.getArchivePath()))
    exclude 'com/flansmod/server/'
}

artifacts {
    archives jar
    archives serverJar
    archives clientJar
}

build.finalizedBy('proguard')

task('proguard', type: ProGuardTask) {
    //configuration 'configuration.pro'

    injars 'build/libs/' + project.name + '-' + project.version + '-client.jar'
    outjars 'build/obf/' + project.name + '-' + project.version + '-client-obf.jar'
    injars 'build/libs/' + project.name + '-' + project.version + '-server.jar'
    outjars 'build/obf/' + project.name + '-' + project.version + '-server-obf.jar'

    if (System.getProperty('java.version').startsWith('1.')) {
        libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    } else {
        libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
    }

    libraryjars 'lib/lwjgl-2.9.1.jar'
    libraryjars 'lib/netty-all-4.0.10.Final.jar'
    libraryjars 'lib/authlib-1.5.16.jar'
    libraryjars 'lib/log4j-core-2.0-beta9.jar'
    libraryjars 'lib/log4j-api-2.0-beta9.jar'
    libraryjars 'lib/guava-17.0.jar'
    libraryjars 'lib/ForgeMod-1.7.10.jar'

    printmapping 'build/out.map'
    //keepparameternames
    dontshrink
    dontoptimize
    renamesourcefileattribute 'SourceFile'
    keepattributes 'Exceptions,InnerClasses,Signature,Deprecated,'
    //SourceFile; LineNumberTable; EnclosingMethod

    keepattributes '*Annotation*'

    keepclassmembernames 'class * { \
        java.lang.Class class$(java.lang.String); \
        java.lang.Class class$(java.lang.String, boolean); \
    }'

    keepclasseswithmembernames 'class * { \
        native <methods>; \
    }'

    keepclassmembers allowoptimization: true, 'enum * { \
        public static **[] values(); \
        public static ** valueOf(java.lang.String); \
    }'

    keepclassmembers 'class * implements java.io.Serializable { \
        static final long serialVersionUID; \
        static final java.io.ObjectStreamField[] serialPersistentFields; \
        private void writeObject(java.io.ObjectOutputStream); \
        private void readObject(java.io.ObjectInputStream); \
        java.lang.Object writeReplace(); \
        java.lang.Object readResolve(); \
    }'

    keep 'class cofh.api.** { \
        *; \
    }'
    keep 'class com.flansmod.api.** { \
        *; \
    }'
    keep 'class com.flansmod.client.model.** { \
        !private *; \
    }'
    keep 'class com.flansmod.client.tmt.** { \
        !private * ; \
    }'
    keep 'class com.flansmod.common.vector.** { \
        !private * ; \
    }'
    keep 'class com.flansmod.common.FlansMod'
    keep 'class com.flansmod.server.ServerProxy'
    keep 'class com.flansmod.client.ClientProxy'
    keep 'class com.flansmod.client.gui.config.ModGuiFactory'
}
